@import "reset";

@mixin bp($size) {
  @if $size == 'desktop' {
    @media all and (min-width: 768px) {
      @content;
    }
  } @else if $size == 'tablet' {
    @media all and (min-width: 480px) {
      @content;
    }
  }
}

body {
	animation: fader 1s;

	@keyframes fader {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

}


.home {

	.wrapper {
		margin: 0 auto;
		width: 80%;
		max-width: 1000px;
	}

	ul {
		list-style: none;

		li {

			a {
				text-decoration: none;
				border-bottom: 3px solid darkorange;
				color: darkorange;
				padding: 5px;
				transition: all 500ms;

				&:hover {
					background-color: complement(darkorange);
					padding: 20px 20px 20px 0;
					font-size: 2rem;
				}
			}
		}
	}
}

.lang-table {

	$nogc-color: crimson;
	$gc-color: teal;
	$arc-color: goldenrod;

	.controls-pane {
		position: fixed;
		left: 0;
		top: 0;
		bottom: 0;
		width: 20%;
		background-color: black;
		
		.hidden-controls {

			display: none;

			.filter-button {
				color: white;
				background-color: black;
				font-size: 1.2rem;
				border: none;
				border-bottom: white 1px solid;
				width: 100%;
				padding: 20px 5px;
				transition: color 500ms, background-color 1s;

				&:hover {
					background-color: white;
					color: black;
				}

			}

			form {
				margin-top: 30px;

				input[type="text"] {
					width: 100%;
					padding: 10px;
				}
			}

			@include bp(tablet) {
				display: block;
			}

			@include bp(desktop) {
				display: block;
			}
		}

		.slide-button, {
			display: block;
			position: absolute;
			bottom: 0;
			left: 0;
			padding: 20px;
			color: white;
			background-color: black;

			@include bp(tablet) {
				display: none;
			}

			@include bp(desktop) {
				display: none;
			}
		}

		.search-button {
			position: absolute;
			top: 0;
			left: 0;
			color: white;
			background-color: black;
			padding: 20px;

			@include bp(tablet) {
				display: none;
			}

			@include bp(desktop) {
				display: none;
			}
		}

	}

	.table-pane {
		padding: 10px;
		width: 80%;
		position: absolute;
		right: 0;
		background-color: lightgrey;
		min-height: 100vh;


		@include bp(tablet) {

		}

		@include bp(desktop) {

		}

		.grid {

			.tile {
				width: calc(50% - 20px);
				padding: 20px;
				margin: 10px;
				background: blue;
				border-radius: 5px;

				@include bp(desktop) {
					width: calc(20% - 20px);
				}

				@include bp(tablet) {
					width: calc(25% - 20px);
				}

				&:hover {
					box-shadow: 1px 1px 3px black;
				}

				&.nogc {
					background-color: $nogc-color;
					color: complement($nogc-color);

				}

				&.gc {
					background-color: $gc-color;
					color: complement($gc-color);
				}

				&.arc {
					background-color: $arc-color;
					color: complement($arc-color);
				}

				h3 {
					color: white;
				}

				a {
					text-decoration: none;
					font-weight: bold;
					color: hotpink;
					border-bottom: darkslategrey 3px solid;
					padding: 10px;
					transition: all 1s;

					&:hover {
						background-color: darkslategrey;
					}

					&:visited {
						color: black;
						background-color: dimgrey;
					}
				}
			}

		}

	}
}


.box-breather {

	$little-box-size: 50px;
	$big-box-size: 500px + $little-box-size;

	@keyframes mover {
		0%, 100% {
			top: 0;
			left: 0;
		}
		25% {
			top: 0;
			left: calc(100% - 50px);
		}
		50% {
			top: calc(100% - 50px);
			left: calc(100% - 50px);
		}
		75% {
			top: calc(100% - 50px);
			left: 0;
		}
	}

	@keyframes inhale-prompter {
		0%,  100% {
			opacity: 1;
		}
		25%, 50%, 75% {
			opacity: 0;
		}
	}

	@keyframes exhale-prompter {
		50% {
			opacity: 1;
		}
		75% {
			opacity: 0;
		}
	}

	@keyframes hold-prompter {
		25%, 75% {
			opacity: 1;
		}
		50%, 100% {
			opacity: 0;
		}
	}

	.wrapper {
		width: 700px;
		margin: 0 auto;
		text-align: center;
	}

	.big-box {
		margin: 0 auto;
		width: 550px;
		height: 550px;
		position: relative;
		background-color: cornflowerblue;
	}

	.little-box {
		width: 50px;
		height: 50px;
		background-color: teal;
		position: relative;
		animation: mover 16s linear infinite;
	}

	.prompt .inhale {
		animation: inhale-prompter 16s cubic-bezier(1, 0, 1, 0) infinite;
		opacity: 1;
	}

	.prompt .exhale {
		animation: exhale-prompter 16s cubic-bezier(1, 0, 1, 0) infinite;
		opacity: 0;
	}

	.prompt .hold {
		animation: hold-prompter 16s cubic-bezier(1, 0, 1, 0) infinite;
		opacity: 0;
	}

}
